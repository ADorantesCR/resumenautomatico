!pip install sumy
!pip install openpyxl

import pandas as pd
from sumy.parsers.plaintext import PlaintextParser
from sumy.nlp.tokenizers import Tokenizer
from sumy.summarizers.lex_rank import LexRankSummarizer
import nltk
nltk.download('punkt')


def generate_summary_and_key_sentence(text, keywords, language="spanish", sentences_count=2):
    # Crear el parser
    parser = PlaintextParser.from_string(text, Tokenizer(language))
    
    # Crear el summarizador
    summarizer = LexRankSummarizer()
    
    # Obtener el resumen
    summary = summarizer(parser.document, sentences_count)
    summary = " ".join([str(sentence) for sentence in summary])
    
    # Obtener la oración que contiene la palabra clave
    sentences = parser.document.sentences
    key_sentence = next((sentence for sentence in sentences if any(keyword.lower() in str(sentence).lower() for keyword in keywords)), "")

    return summary, str(key_sentence)


# Cargar los datos
df = pd.read_csv("archivo.csv")

# Obtener el resumen y la oración clave para cada nota
summaries = []
key_sentences = []
for note in df['notas']:
    summary, key_sentence = generate_summary_and_key_sentence(note, ["procuraduría federal de protección al ambiente", "profepa"])
    summaries.append(summary)
    key_sentences.append(key_sentence)
    
# Agregar las columnas al dataframe
df['resumen'] = summaries
df['oración clave'] = key_sentences

# Guardar el resultado en un nuevo archivo de Excel
df.to_excel("archivo_resumenvesp.xlsx", index=False)
